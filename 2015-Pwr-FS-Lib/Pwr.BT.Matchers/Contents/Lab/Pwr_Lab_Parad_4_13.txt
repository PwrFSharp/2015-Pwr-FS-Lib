Paradygmaty programowania, lista 4, 05.11.2015. Czwartek 13:15.

WAÅ»NE1: Do kaÅ¼dego zadania przygotuj 3-5 testÃ³w sprawdzajÄ…cych poprawnoÅ›Ä‡ dziaÅ‚ania!
WAÅ»NE2: WszÄ™dzie, gdzie to moÅ¼liwe naleÅ¼y uÅ¼ywaÄ‡ rekurencji ogonowej.
WAÅ»NE3: Wolno uÅ¼ywaÄ‡ nastÄ™pujÄ…cych funkcji bibliotecznych o zÅ‚oÅ¼onoÅ›ci wiÄ™kszej, niÅ¼ O(1):
        reverse, foldleft, map, filter, append.

1) Zdefiniuj funkcjÄ™ filtrujÄ…cÄ… elementy z listy list.
   Funkcja ma mieÄ‡ dwa parametry: listÄ™ list i wartoÅ›Ä‡.
   W liÅ›cie wynikowej pozostaÄ‡ majÄ… tylko te elementy,
   ktÃ³rych suma elementÃ³w listy jest rÃ³wny podanej wartoÅ›ci.

   Zadbaj o zÅ‚oÅ¼onoÅ›Ä‡ obliczeniowÄ… i pamiÄ™ciowÄ…!

   PrzykÅ‚ad: [[1;2;3];[2;4];[5;6]] 6 -> [[1;2;3];[2;4]]

   Punkty: 6 (jÄ™zyk Ocaml)

2) Zdefiniuj funkcjÄ™ przeksztaÅ‚cajÄ…cÄ… liczbÄ™ dziesiÄ™tnÄ… w listÄ™ cyfr szesnastkowych.
   Funkcja ma mieÄ‡ jeden parametr.

   Zadbaj o zÅ‚oÅ¼onoÅ›Ä‡ obliczeniowÄ… i pamiÄ™ciowÄ…!

   PrzykÅ‚ad: 31 -> [1;15]

   Punkty: 6 (jÄ™zyk Ocaml)

3) Zdefiniuj funkcjÄ™, Å‚Ä…czÄ…cÄ… napisy w liÅ›cie czteroelementowych krotek.
   Funkcja ma mieÄ‡ jeden parametr.

   Zadbaj o zÅ‚oÅ¼onoÅ›Ä‡ obliczeniowÄ… i pamiÄ™ciowÄ…!

   PrzykÅ‚ad: [("ala","ma","kot","a");("kot","nie","ma","ali")] -> ["alamakota","kotniemaali"]

   Punkty: 8 (jÄ™zyk Ocaml)